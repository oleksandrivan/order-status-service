/*
 * This file is generated by jOOQ.
 */
package com.uoc.jooq.tables.records


import com.uoc.jooq.tables.Address

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class AddressRecord() : UpdatableRecordImpl<AddressRecord>(Address.ADDRESS) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var street: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var city: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var state: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var postalcode: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var country: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised AddressRecord
     */
    constructor(id: Int? = null, street: String? = null, city: String? = null, state: String? = null, postalcode: String? = null, country: String? = null): this() {
        this.id = id
        this.street = street
        this.city = city
        this.state = state
        this.postalcode = postalcode
        this.country = country
        resetChangedOnNotNull()
    }
}
